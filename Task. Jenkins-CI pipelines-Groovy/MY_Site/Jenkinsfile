pipeline {
    agent any
      
    stages {
        stage('1-Build-Dev') {
            when {
                anyOf {
                    branch "dev"
                }
            }
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/dev']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'Git_hub_ssh', url: 'git@github.com:ZEN10111/MY_Site.git']]]) 
            }
        }
        stage('2-Test-Dev') {
            when {
                anyOf {
                    branch "dev"
                }
            }
            steps {
            sh '''
            echo "------------------pre test Starter-------------------------"
            ls -la
            cat Site/index.html
            echo "------------------pre test Finished------------------------" 
              '''
            sh '''
            echo "------------------Test Starter-------------------------"
            result=`grep "Bukovel" Site/index.html | wc -l`
            echo $result 
            if [ "$result" -ge "1" ]; 
            then 
                echo "Test Pased"
            else
                echo "Failed Pased"
            exit 1
            fi
            echo "------------------Test Finished-------------------------" 
             '''
            }
        }
        stage('3-Deploy-Dev') {
            when {
                anyOf {
                    branch "dev"
                }
            }
            steps([$class: 'BapSshPromotionPublisherPlugin']) {
                sshPublisher(
                    continueOnError: false, failOnError: true,
                    publishers: [
                        sshPublisherDesc(
                           configName: "Dev_server",
                           verbose: true,
                           transfers: [
                                sshTransfer(sourceFiles: "Site/*",),
                                sshTransfer(execCommand: 'sed -i "s/%%hostname%%/$(hostname)/" /var/www/html/Site/index.html'),
                                sshTransfer(execCommand: "sudo systemctl restart nginx")
                                
                            ]
                        )
                    ]
                )
           }
        }

          stage('1-Build-Prod') {
             when {
                anyOf {
                    branch "main"
                }
            }
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'Git_hub_ssh', url: 'git@github.com:ZEN10111/MY_Site.git']]]) 
            }
        }
        stage('2-Test-Prod') {
             when {
                anyOf {
                    branch "main"
                }
            }
            steps {
            sh '''
            echo "------------------pre test Starter-------------------------"
            ls -la
            cat Site/index.html
            echo "------------------pre test Finished------------------------" 
              '''
            sh '''
            echo "------------------Test Starter-------------------------"
            result=`grep "Bukovel" Site/index.html | wc -l`
            echo $result 
            if [ "$result" -ge "1" ]; 
            then 
                echo "Test Pased"
            else
                echo "Failed Pased"
            exit 1
            fi
            echo "------------------Test Finished-------------------------" 
             '''
            }
        }
        stage('3-Deploy-Prod') {
             when {
                anyOf {
                    branch "main"
                }
            }
            steps([$class: 'BapSshPromotionPublisherPlugin']) {
                sshPublisher(
                    continueOnError: false, failOnError: true,
                    publishers: [
                        sshPublisherDesc(
                           configName: "Prod_server",
                           verbose: true,
                           transfers: [
                                sshTransfer(sourceFiles: "Site/*",),
                                sshTransfer(execCommand: 'sed -i "s/%%hostname%%/$(hostname)/" /var/www/html/Site/index.html'),
                                sshTransfer(execCommand: "sudo systemctl restart nginx")
                                
                            ]
                        )
                    ]
                )
           }
        }   
        stage('4-Notification') {
            steps {
                telegramSend "Branch - ${BRANCH_NAME}. Deploy finished. Build number-${BUILD_NUMBER}"
            }
        }

    }
}
